---
name: Claude Code Review

on:
  # Disable default email notifications
  notifications:
    email: false

  pull_request:
    types: [opened, synchronize]
    # Optional: Only run on specific file changes
    # paths:
    #   - "src/**/*.ts"
    #   - "src/**/*.tsx"
    #   - "src/**/*.js"
    #   - "src/**/*.jsx"

jobs:
  claude-review:
    # Optional: Filter by PR author
    # if: |
    #   github.event.pull_request.user.login == 'external-contributor' ||
    #   github.event.pull_request.user.login == 'new-developer' ||
    #   github.event.pull_request.author_association == 'FIRST_TIME_CONTRIBUTOR'

    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run Claude Code Review
        id: claude-review
        uses: anthropics/claude-code-action@beta
        with:
          claude_code_oauth_token: ${{ secrets.CLAUDE_CODE_OAUTH_TOKEN }}

          # Optional: Specify model
          # (defaults to Claude Sonnet 4, uncomment for Claude Opus 4.1)
          # model: "claude-opus-4-1-20250805"

          # Direct prompt for automated review (no @claude mention needed)
          direct_prompt: |
            Please review this pull request and provide feedback on:
            - Code quality and best practices
            - Potential bugs or issues
            - Performance considerations
            - Security concerns
            - Test coverage

            Be constructive and helpful in your feedback.

          # Optional: Use sticky comments to make Claude reuse the same comment
          # on subsequent pushes to the same PR
          # use_sticky_comment: true

          # Optional: Customize review based on file types
          # direct_prompt: |
          #   Review this PR focusing on:
          #   - For TypeScript files: Type safety and interfaces
          #   - For API endpoints: Security and input validation
          #   - For React components: Performance and accessibility
          #   - For tests: Coverage, edge cases, and test quality

          # Optional: Different prompts for different authors
          # direct_prompt: |
          #   ${{
          #     github.event.pull_request.author_association ==
          #     'FIRST_TIME_CONTRIBUTOR' &&
          #     'Welcome! Please review this PR from a contributor.' &&
          #     'Be encouraging and provide helpful explanations.' ||
          #     'Please provide a code review focusing on our standards.'
          #   }}

          # Optional: Add specific tools for running tests or linting
          # allowed_tools: >-
          #   Bash(npm run test),Bash(npm run lint),Bash(npm run typecheck)

          # Optional: Skip review for certain conditions
          # if: |
          #   !contains(github.event.pull_request.title, '[skip-review]') &&
          #   !contains(github.event.pull_request.title, '[WIP]')
