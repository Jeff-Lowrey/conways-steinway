# Conway's Steinway Unified Configuration File
# This file uses INI format and supports all implementations (Python, Rust, Go, Node.js)
# 
# Each implementation will use the appropriate sections and values from this file.
# Language-specific overrides are in their respective sections.

[core]
# Board initialization type: "random", "static", "fur_elise", "complex", or "showcase"
board_type = random

# Generation limit - use "unlimited" or a number
# Examples:
# generations = 50       # Run for 50 generations
# generations = unlimited # Run indefinitely (default)
generations = unlimited

# Delay between steps in milliseconds (ignored if tempo_bpm is set)
step_delay_ms = 200

# Musical tempo in beats per minute (optional, overrides step_delay_ms)
# Examples:
# tempo_bpm = 120.0    # Moderate tempo  
# tempo_bpm = 126.0    # FÃ¼r Elise tempo (set automatically)
# Leave commented to use step_delay_ms instead
# tempo_bpm = 120.0

# Silent mode (uncomment to disable audio)
# silent = true

[audio]
# Note duration in milliseconds for sequential note playback
note_duration_ms = 200

# Gap between notes in milliseconds for sequential note playback
gap_ms = 50

# Chord duration in milliseconds
chord_duration_ms = 300

# Initial note delay in milliseconds
initial_delay_ms = 50

# Detect chord patterns automatically
detect_chords = true

# Volume level for audio output (0.0-1.0)
volume = 0.6

# Enable pitch shifting for better chromatic range
pitch_shift = true

[random]
# Random initial cells probability (0.0-1.0)
# For the "random" board type, this controls how many cells start alive
alive_probability = 0.2

[board]
# NOTE: Board width is ALWAYS 88 cells to match piano keys and CANNOT be changed.
# This is a fixed requirement to match piano keys and is not configurable.

# Board height (default: 40 cells)
height = 40

[logging]
# Global log level (trace, debug, info, warn, error)
level = info

# Enable logging to file
to_file = false

# Log file path (if not specified, defaults to logs/backend/conways_steinway.log)
# file_path = logs/backend/conways_steinway.log

# Log levels for different outputs
file_level = debug
console_level = info

# Log file rotation
file_rotation = true
file_size_limit = 10  # Size limit in MB
file_count = 5

[logging.destinations.console]
name = console
destination_type = Console
level = info
# pattern = [%l] %m%n

# File destination example (uncomment to enable)
# [logging.destinations.file]
# name = file
# destination_type = File
# level = debug
# file_path = logs/backend/conways_steinway.log
# pattern = [%d(%Y-%m-%d %H:%M:%S) %l] %t - %m%n

# [logging.destinations.file.rotation]
# enabled = true
# size_limit = 10485760  # 10 MB
# file_count = 5

# JSON destination example (uncomment to enable)
# [logging.destinations.json]
# name = json
# destination_type = Json
# level = debug
# file_path = logs/backend/conways_steinway.json

# [logging.destinations.json.rotation]
# enabled = true
# size_limit = 10485760  # 10 MB
# file_count = 3

# Language-specific overrides

[rust]
# The Rust implementation has some specific settings for logging
# These override the general settings when running the Rust version

# Enable file logging by default in Rust
logging_to_file = true

# Language-specific log path prefix
log_path_prefix = logs/rust